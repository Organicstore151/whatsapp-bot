const express = require("express");
const bodyParser = require("body-parser");
const twilio = require("twilio");
const axios = require("axios");
const fs = require("fs");
const path = require("path");
require("dotenv").config();

const app = express();
const PORT = process.env.PORT || 3000;

app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());

const client = twilio(process.env.TWILIO_ACCOUNT_SID, process.env.TWILIO_AUTH_TOKEN);
const sessions = {};

const logPath = path.join(__dirname, "user_behavior.log");

function logUserAction(from, step, message) {
  const data = {
    date: new Date().toISOString(),
    phone: from,
    step,
    message,
  };

  axios
    .post("https://script.google.com/macros/s/AKfycbyBfgnmgHoklSrxyvkRlVyVDJI960l4BNK8fzWxctoVTTXaVzshADG2ZR6rm-7GBxT02Q/exec", data)
    .then(() => console.log("üì§ –õ–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Google –¢–∞–±–ª–∏—Ü—É"))
    .catch((err) => console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤ —Ç–∞–±–ª–∏—Ü—É:", err.message));

  const logLine = `${data.date} | ${data.phone} | ${data.step} | ${data.message}\n`;

  fs.access(logPath, fs.constants.F_OK, (err) => {
    if (err) {
      fs.writeFile(logPath, logLine, (err) => {
        if (err) console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞:", err.message);
        else console.log("üìù –§–∞–π–ª –ª–æ–≥–æ–≤ —Å–æ–∑–¥–∞–Ω –∏ –ª–æ–≥ –∑–∞–ø–∏—Å–∞–Ω.");
      });
    } else {
      fs.appendFile(logPath, logLine, (err) => {
        if (err) console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥:", err.message);
        else console.log("üìù –õ–æ–≥ –∑–∞–ø–∏—Å–∞–Ω:", logLine.trim());
      });
    }
  });
}
app.post("/webhook", async (req, res) => {
  console.log("üì© –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", req.body);

  const from = req.body.From;
  const message = (req.body.Body || "").trim();
  const mediaUrl = req.body.MediaUrl0;

  if (!sessions[from]) {
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ)
    await client.messages.create({
      to: from,
      messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
      contentSid: process.env.TEMPLATE_SID, // –æ—Å–Ω–æ–≤–Ω–æ–π —à–∞–±–ª–æ–Ω
    });

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–Ω–æ–ø–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏)
    await client.messages.create({
      to: from,
      messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
      contentSid: "HX942c3ececa1c3412f13674ef9dacdbc3", // –≤—Ç–æ—Ä–æ–π —à–∞–±–ª–æ–Ω
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
    sessions[from] = { step: "waiting_for_command" };

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    logUserAction(from, "new_user", message);

    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
    return res.status(200).send();
  }

  // –ï—Å–ª–∏ —Å–µ—Å—Å–∏—è —É–∂–µ –µ—Å—Ç—å ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
  const session = sessions[from];
  logUserAction(from, session.step, message);

  if (mediaUrl) {
    session.recipeImage = mediaUrl;
    await client.messages.create({
      to: from,
      messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
      body: "üì∏ –§–æ—Ç–æ —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ–ª—É—á–µ–Ω–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.",
    });
  }

  if (session.step === "waiting_for_command") {
    if (message === "–£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤") {
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à ID (–ª–æ–≥–∏–Ω):",
      });
      session.step = "waiting_for_login";
    } else if (message === "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏") {
      try {
        await client.messages.create({
          to: from,
          messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
          contentSid: "HXc07f9a56c952dd93c5a4308883e00a7e",
        });
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —à–∞–±–ª–æ–Ω–∞:", err.message);
        await client.messages.create({
          to: from,
          messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
          body: "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–∞–ª–æ–≥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
        });
      }
    } else if (message === "–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤") {
      await sendPDF(from, "üßæ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –∫–∞—Ç–∞–ª–æ–≥–æ–º –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤üì•", "https://organicstore151.github.io/whatsapp-catalog/catalog.pdf");
    } else if (message === "–ö—É—Ä—Å –ª–µ—á–µ–Ω–∏—è") {
      await sendPDF(from, "ü©∫ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–º—É –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—éüì•", "https://organicstore151.github.io/comples/complex.pdf");
    } else if (message === "–ü—Ä–∞–π—Å-–ª–∏—Å—Ç") {
      await sendPDF(from, "üí∞ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–ºüì•", "https://organicstore151.github.io/price/price.pdf");
    } else if (message === "–ê–∫—Ü–∏–∏ —ç—Ç–æ–≥–æ –º–µ—Å—è—Ü–∞") {
      // –ú–∞—Å—Å–∏–≤ —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const promoImages = [
        'https://github.com/Organicstore151/monthly-promotions/raw/main/GPL%20Femme%2BGPL%20Man_KZ.jpg',
        'https://github.com/Organicstore151/monthly-promotions/raw/main/GPL%20Femme_KZ.jpg',
        'https://github.com/Organicstore151/monthly-promotions/raw/main/GPL%20Man_KZ.jpg',
        'https://github.com/Organicstore151/monthly-promotions/raw/main/PROMO_FELICITA_0104-1504_KZ.jpg',
        'https://github.com/Organicstore151/monthly-promotions/raw/main/PROMO_TEMERO%20GENERO_1604-3004_KZ.jpg',
        'https://github.com/Organicstore151/monthly-promotions/raw/main/SL-06%2BPC-12_KZ.jpg',
        'https://github.com/Organicstore151/monthly-promotions/raw/main/Volustom_KZ.jpg'
      ];

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ —Å –∞–∫—Ü–∏—è–º–∏
      for (const imageUrl of promoImages) {
        await sendPDF(from, "üéâ –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∞–∫—Ü–∏—è–º–∏ —ç—Ç–æ–≥–æ –º–µ—Å—è—Ü–∞üì•", imageUrl);
      }
    } else if (message === "–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑") {
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: "*üõí –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –∏–º—è –∏–ª–∏ ID –∫–ª–∏–µ–Ω—Ç–∞.*\n–≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –º—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∑–∞–∫–∞–∑ –º–µ–Ω–µ–¥–∂–µ—Ä—É –∏ –æ–Ω –º–æ–≥ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è:",
      });
      session.step = "waiting_for_name";
    } else if (message === "–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º") {
      const managerLink = "https://wa.me/77774991275?text=–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ";
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: `üí¨ –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ:\n${managerLink}`,
      });
    } else {
      session.step = "unrecognized_input";
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: "ü§ñ –ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å.\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:\n1Ô∏è‚É£ ‚Äî –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º\n2Ô∏è‚É£ ‚Äî –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É",
      });
    }
  } else if (session.step === "unrecognized_input") {
    if (message === "1") {
      const managerLink = "https://wa.me/77774991275?text=–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ";
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: `üí¨ –ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å—Å—ã–ª–∫—É –Ω–∏–∂–µ:\n${managerLink}`,
      });
      session.step = "waiting_for_command";
    } else if (message === "2") {
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        contentSid: process.env.TEMPLATE_SID,
      });
      session.step = "waiting_for_command";
    } else {
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ:\n1Ô∏è‚É£ ‚Äî –ú–µ–Ω–µ–¥–∂–µ—Ä\n2Ô∏è‚É£ ‚Äî –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ",
      });
    }
} else if (session.step === "waiting_for_login") {
    session.login = message;
    session.step = "waiting_for_password";
    await client.messages.create({
      to: from,
      messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
      body: "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:",
    });
  } else if (session.step === "waiting_for_password") {
    session.password = message;
    session.step = "bonus_shown";
    try {
      const authResponse = await axios.post("https://lk.peptides1.ru/api/auth/sign-in", {
        login: session.login,
        password: session.password,
      });

      const token = authResponse.data.token;

      const bonusResponse = await axios.get("https://lk.peptides1.ru/api/partners/current/closing-info", {
        headers: { Authorization: `Bearer ${token}` },
      });

      const balanceArray = bonusResponse.data?.current?.balance;
      const bonusAmount = Array.isArray(balanceArray) && balanceArray[0]?.amount !== undefined
        ? balanceArray[0].amount
        : null;

      if (bonusAmount !== null) {
        await client.messages.create({
  to: from,
  messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
  body: `üéâ –í–∞—à –±–æ–Ω—É—Å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${bonusAmount} —Ç–≥\n\n–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?\n1Ô∏è‚É£ –°–Ω—è—Ç—å –±–æ–Ω—É—Å—ã\n2Ô∏è‚É£ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑\n3Ô∏è‚É£ –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º\n4Ô∏è‚É£ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é`,
});
      } else {
        await client.messages.create({
          to: from,
          messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
          body: "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–π –±–∞–ª–∞–Ω—Å.",
        });
        delete sessions[from];
      }
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞:", err.message);
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: "‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.",
      });
      delete sessions[from];
    }
    return res.status(200).send();
  } else if (session.step === "bonus_shown") {
    if (message === "1") {
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: "üí≥ –ß—Ç–æ–±—ã —Å–Ω—è—Ç—å –±–æ–Ω—É—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º:\nhttps://wa.me/77774991275?text=–•–æ—á—É+—Å–Ω—è—Ç—å+–±–æ–Ω—É—Å—ã",
      });
    } else if (message === "2") {
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: "*üõí –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –∏–º—è –∏–ª–∏ ID –∫–ª–∏–µ–Ω—Ç–∞:*",
      });
      session.step = "waiting_for_name";
      return res.status(200).send();
    } else if (message === "3") {
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: "üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º: https://wa.me/77774991275",
      });
      } else if (message === "4") {
      session.step = "waiting_for_command";
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        contentSid: process.env.TEMPLATE_SID,
      });
    } else {
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ:\n1Ô∏è‚É£ –°–Ω—è—Ç—å –±–æ–Ω—É—Å—ã\n2Ô∏è‚É£ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑\n3Ô∏è‚É£ –°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º\n4Ô∏è‚É£ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
      });
    }
  } else if (session.step === "waiting_for_name") {
    session.name = message;
    session.step = "waiting_for_items";
    await client.messages.create({
      to: from,
      messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
      body: "*‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤ –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ —Ä–µ—Ü–µ–ø—Ç–∞:*",
    });
  } else if (session.step === "waiting_for_items") {
    session.items = message;
    session.step = "waiting_for_address";
    await client.messages.create({
      to: from,
      messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
      body: "*üì¶ –£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:*",
    });
  } else if (session.step === "waiting_for_address") {
    session.address = message;
    const orderText = `üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\nüë§ –§–ò–û: ${session.name}\nüìã –ü—Ä–µ–ø–∞—Ä–∞—Ç—ã: ${session.items}\nüè† –ê–¥—Ä–µ—Å: ${session.address}\nüìû –û—Ç –∫–ª–∏–µ–Ω—Ç–∞: ${from}\nüñºÔ∏è –§–æ—Ç–æ —Ä–µ—Ü–µ–ø—Ç–∞: ${session.recipeImage || "–ù–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ"}`;
    try {
      await client.messages.create({
        from: "whatsapp:+77718124038",
        to: "whatsapp:+77774991275",
        body: orderText,
      });
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç.",
      });
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞:", err.message);
      await client.messages.create({
        to: from,
        messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
        body: "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
      });
    }
    delete sessions[from];
    return res.status(200).send();
  }

  return res.status(200).send();
});

async function sendPDF(to, caption, mediaUrl) {
  try {
    await client.messages.create({
      to,
      messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
      body: caption,
      mediaUrl: [mediaUrl],
    });
    console.log("üì§ PDF –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:", mediaUrl);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ PDF:", err.message);
    await client.messages.create({
      to,
      messagingServiceSid: process.env.MESSAGING_SERVICE_SID,
      body: "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç.",
    });
  }
}

app.listen(PORT, () => {
  console.log(`üëÇ –°–ª—É—à–∞—é –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});


