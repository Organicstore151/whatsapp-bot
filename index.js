// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
const express = require("express");
const bodyParser = require("body-parser");
const axios = require("axios");
const fs = require("fs");
const path = require("path");
require("dotenv").config();

// –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Express
const app = express();
const PORT = process.env.PORT || 3000;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ middleware
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());

// –°–µ—Å—Å–∏–∏ –ø–æ –Ω–æ–º–µ—Ä–∞–º —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
const sessions = {};
const logPath = path.join(__dirname, "user_behavior.log");

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
function logUserAction(from, step, message) {
  const data = {
    date: new Date().toISOString(),
    phone: from,
    step,
    message,
  };

  axios.post(process.env.GOOGLE_SHEET_WEBHOOK_URL, data)
    .then(() => console.log("\ud83d\udce4 –õ–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Google –¢–∞–±–ª–∏—Ü—É"))
    .catch((err) => console.error("\u274c –û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É:", err.message));

  const logLine = `${data.date} | ${data.phone} | ${data.step} | ${data.message}\n`;
  fs.appendFile(logPath, logLine, (err) => {
    if (err) console.error("\u274c –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥:", err.message);
    else console.log("\ud83d\udcdd –õ–æ–≥ –∑–∞–ø–∏—Å–∞–Ω:", logLine.trim());
  });
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –±–æ–Ω—É—Å–æ–≤
async function getBonusBalance(login, password) {
  try {
    const authResponse = await axios.post("https://lk.peptides1.ru/api/auth/sign-in", { login, password });
    const token = authResponse.data.token;
    if (!token) return null;

    const balanceResponse = await axios.get("https://lk.peptides1.ru/api/partners/current/closing-info", {
      headers: { Authorization: `Bearer ${token}` },
    });

    return balanceResponse.data.current.balance[0]?.amount || null;
  } catch (error) {
    console.error("\u274c –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–æ–≤:", error.message);
    return null;
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
const sendMessageToMeta = async (to, message) => {
  try {
    await axios.post(
      `https://graph.facebook.com/v16.0/${process.env.PHONE_NUMBER_ID}/messages`,
      {
        messaging_product: "whatsapp",
        to,
        type: "text",
        text: { body: message },
      },
      {
        headers: { Authorization: `Bearer ${process.env.META_ACCESS_TOKEN}` },
      }
    );
    console.log("\ud83d\udce4 –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:", message);
  } catch (err) {
    console.error("\u274c –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:", err.response?.data || err.message);
  }
};

// –û—Ç–ø—Ä–∞–≤–∫–∞ PDF
const sendPDF = async (to, caption, pdfUrl) => {
  try {
    await axios.post(
      `https://graph.facebook.com/v16.0/${process.env.PHONE_NUMBER_ID}/messages`,
      {
        messaging_product: "whatsapp",
        to,
        type: "document",
        document: {
          link: pdfUrl,
          caption,
        },
      },
      {
        headers: {
          Authorization: `Bearer ${process.env.META_ACCESS_TOKEN}`,
          "Content-Type": "application/json",
        },
      }
    );
    console.log("\ud83d\udcc4 PDF –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:", caption);
  } catch (err) {
    console.error("\u274c –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ PDF:", err.response?.data || err.message);
  }
};

// –®–∞–±–ª–æ–Ω —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ ‚Äî —Ç–æ–ª—å–∫–æ –≤ header
const sendTemplateMessageWithParams = async (to, templateName, headerParams = []) => {
  try {
    await axios.post(
      `https://graph.facebook.com/v16.0/${process.env.PHONE_NUMBER_ID}/messages`,
      {
        messaging_product: "whatsapp",
        to,
        type: "template",
        template: {
          name: templateName,
          language: { code: "ru" },
          components: [
            {
              type: "header",
              parameters: headerParams,
            },
            {
              type: "body",
              parameters: [],
            }
          ]
        },
      },
      {
        headers: {
          Authorization: `Bearer ${process.env.META_ACCESS_TOKEN}`,
          "Content-Type": "application/json",
        },
      }
    );
    console.log(`\ud83d\udce4 –®–∞–±–ª–æ–Ω "${templateName}" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º`);
  } catch (error) {
    console.error("\u274c –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —à–∞–±–ª–æ–Ω–∞:", error.response?.data || error.message);
  }
};

// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
const sendTemplateMessage = async (to, templateName) => {
  await sendTemplateMessageWithParams(to, templateName, []);
};

// Webhook –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
app.get("/webhook", (req, res) => {
  const { "hub.mode": mode, "hub.verify_token": token, "hub.challenge": challenge } = req.query;
  if (mode === "subscribe" && token === process.env.VERIFY_TOKEN) {
    console.log("\u2705 Webhook –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω");
    return res.status(200).send(challenge);
  }
  res.sendStatus(403);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
app.post("/webhook", async (req, res) => {
  const messageObj = req.body.entry?.[0]?.changes?.[0]?.value?.messages?.[0];
  if (!messageObj || !messageObj.from) return res.sendStatus(200);

  const from = messageObj.from;
  const isNewUser = !sessions[from];
  if (isNewUser) {
    sessions[from] = { step: "waiting_for_command" };
    await sendTemplateMessage(from, "hello_client");
    logUserAction(from, "new_user", "\ud83d\udc4b –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å");
    return res.sendStatus(200);
  }

  if (messageObj.type === "image" && sessions[from].step === "waiting_for_order_address") {
    const imageId = messageObj.image.id;
    const imageUrl = `https://graph.facebook.com/v16.0/${imageId}`;
    sessions[from].order = sessions[from].order || {};
    sessions[from].order.imageUrl = imageUrl;
    return res.sendStatus(200);
  }

  let message = messageObj.text?.body ||
                messageObj.button?.payload ||
                messageObj.interactive?.button_reply?.id ||
                messageObj.interactive?.list_reply?.id || "";

  const session = sessions[from];
  logUserAction(from, session.step, message);

  switch (session.step) {
    case "waiting_for_command":
      if (message === "–£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤") {
        await sendMessageToMeta(from, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à ID (–ª–æ–≥–∏–Ω):");
        session.step = "waiting_for_login";
      } else if (message === "–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤") {
        await sendPDF(from, "\ud83d\udcd7 –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –∫–∞—Ç–∞–ª–æ–≥–æ–º –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤", "https://organicstore151.github.io/whatsapp-catalog/catalog.pdf");
      } else if (message === "–ö—É—Ä—Å –ª–µ—á–µ–Ω–∏—è") {
        await sendPDF(from, "\ud83e\uddea –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é", "https://organicstore151.github.io/comples/complex.pdf");
      } else if (message === "–ü—Ä–∞–π—Å-–ª–∏—Å—Ç") {
        await sendPDF(from, "\ud83d\udcb0 –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç", "https://organicstore151.github.io/price/price.pdf");
      } else if (message === "–°–Ω—è—Ç—å –±–æ–Ω—É—Å—ã") {
        const managerLink = "https://wa.me/77774991275";
        await sendMessageToMeta(from, `\u260e\ufe0f –ß—Ç–æ–±—ã —Å–Ω—è—Ç—å –±–æ–Ω—É—Å—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø–æ WhatsApp:\n${managerLink}`);
      } else if (message === "–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑") {
  // üí• –°–±—Ä–æ—Å–∏–º –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —à–∞–≥–∏
  session.step = "waiting_for_order_name";
  session.order = {};
  delete session.login;
  await sendMessageToMeta(from, "üë§ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏–ª–∏ ID –∫–ª–∏–µ–Ω—Ç–∞:\n\n_–≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∑–∞–ª—Å—è —Å –≤–∞–º–∏ –∏ —É—Ç–æ—á–Ω–∏–ª –¥–µ—Ç–∞–ª–∏._");
}
      } else {
        await sendMessageToMeta(from, "\ud83e\udd16 –ù–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n- –£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å –±–æ–Ω—É—Å–æ–≤\n- –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤\n- –ö—É—Ä—Å –ª–µ—á–µ–Ω–∏—è\n- –ü—Ä–∞–π—Å-–ª–∏—Å—Ç");
      }
      break;

    case "waiting_for_order_name":
      session.order.name = message;
      session.step = "waiting_for_order_items";
      await sendMessageToMeta(from,
        "\ud83d\udcdd *–£–∫–∞–∂–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å:*\n\n_–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ —Ä–µ—Ü–µ–ø—Ç–∞. –ï–≥–æ —É–≤–∏–¥–∏—Ç –º–µ–Ω–µ–¥–∂–µ—Ä._"
      );
      break;

    case "waiting_for_order_items":
      session.order.items = message;
      session.step = "waiting_for_order_address";
      await sendMessageToMeta(from,
        "\ud83c\udfe0 *–£–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:*\n\n_–ë–µ–∑ –Ω–µ–≥–æ –º—ã –Ω–µ —Å–º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑._"
      );
      break;

    case "waiting_for_order_address":
      session.order.address = message;
      session.step = "waiting_for_order_confirm";
      const summary = `\ud83d\uddde –í–æ—Ç –≤–∞—à –∑–∞–∫–∞–∑:\n\n\ud83d\udc64 –ò–º—è / ID: ${session.order.name}\n\ud83d\udccb –ü—Ä–µ–ø–∞—Ä–∞—Ç—ã: ${session.order.items}\n\ud83c\udfe0 –ê–¥—Ä–µ—Å: ${session.order.address}` +
                      (session.order.imageUrl ? `\n\ud83d\udcf8 –§–æ—Ç–æ —Ä–µ—Ü–µ–ø—Ç–∞: ${session.order.imageUrl}` : "") +
                      `\n\n_–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –≤—Å—ë –ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ._\n\n1\ufe0f\u20e3 –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—É\n2\ufe0f\u20e3 –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑`;
      await sendMessageToMeta(from, summary);
      break;

    case "waiting_for_order_confirm":
      if (message === "1") {
        const final = `\ud83d\uded2 –ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\n\n\ud83d\udc64 –ò–º—è / ID: ${session.order.name}\n\ud83d\udccb –ü—Ä–µ–ø–∞—Ä–∞—Ç—ã: ${session.order.items}\n\ud83c\udfe0 –ê–¥—Ä–µ—Å: ${session.order.address}\n\ud83d\udcf1 –¢–µ–ª–µ—Ñ–æ–Ω: ${from}` +
                      (session.order.imageUrl ? `\n\ud83d\udcf8 –§–æ—Ç–æ —Ä–µ—Ü–µ–ø—Ç–∞: ${session.order.imageUrl}` : "");
        await sendMessageToMeta("77774991275", final);
        await sendMessageToMeta(from, "\u2705 –°–ø–∞—Å–∏–±–æ! –í–∞—à –∑–∞–∫–∞–∑ –ø–µ—Ä–µ–¥–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É. –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.");
        session.step = "waiting_for_command";
        delete session.order;
      } else if (message === "2") {
        await sendMessageToMeta(from, "\u274c –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.");
        session.step = "waiting_for_command";
        delete session.order;
      } else {
        await sendMessageToMeta(from, "\ud83e\udd16 –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ:\n1 ‚Äî –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑\n2 ‚Äî –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑");
      }
      break;

    case "waiting_for_login":
      session.login = message;
      session.step = "waiting_for_password";
      await sendMessageToMeta(from, "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å:");
      break;

    case "waiting_for_password":
      const bonus = await getBonusBalance(session.login, message);
      if (bonus !== null) {
        await sendTemplateMessageWithParams(from, "bonus_client", [
          { type: "text", text: bonus.toString() }
        ]);
        console.log(`\ud83d\udce4 –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —à–∞–±–ª–æ–Ω bonus_client —Å –±–æ–Ω—É—Å–æ–º: ${bonus}`);
      } else {
        await sendMessageToMeta(from, "\u274c –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
      }
      session.step = "waiting_for_login";
      break;

    default:
      session.step = "waiting_for_command";
      await sendMessageToMeta(from, "\ud83e\udd16 –Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–Ω—É—Å—ã –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥.");
  }

  res.sendStatus(200);
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`\ud83d\ude80 –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
